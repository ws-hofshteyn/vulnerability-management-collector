/**
* Says hello to a person.
*
* @param name Name of the person to greet.
*/

var path 		= require('path');
var fsp 		= require('fs-promise');
var Promise 	= require('bluebird');
var _ 			= require('lodash');

module.exports = {
	collectData,
};

function collectData () {
	var returnData = {
		"report" : {
			"components" : [],
		},
	};
	var nodeFolder = './node_modules';

	Promise
		.resolve()
		.then(function () {
			return fsp
					.readdir(nodeFolder)
					.then(function (data) {
						return data;
					})
					.catch(function (_error) {
						if (_error) {
							throw ('There is no \'node_modules\' folder here');
						}
					})
		})
		.then(function (folders) {
			var promises = [];
			promises.push(new Promise(function (resolve) {
				_.map(folders, function (folder) {
					folder = nodeFolder + '/' + folder + '/package.json';
					var obj = {};
					fsp
						.readFile(folder, 'utf8')
						.then(function (data) {
							obj = JSON.parse(data);
							returnData.report.components.push({
								name    : obj.name,
								version : obj.version,
							});
							resolve();
						})
						.catch(function (_err) {
							console.log('_err', _err);
							return;
						})
				});
			}));
			return Promise.all(promises);
		})
		.then(function () {
			console.log('Components', returnData.report.components);
			// return fsp.writeFileSync('./Components.json', JSON.stringify(returnData, null, 2), null);
		})
		.catch(function (error) {
			console.log('Error: ', error);
		});
}

// Allows us to call this function from outside of the library file.
// Without this, the function would be private to this file.
