/**
* Says hello to a person.
*
* @param name Name of the person to greet.
*/

var path 		= require('path');
var fsp 		= require('fs-promise');
var Promise 	= require('bluebird');
var _ 			= require('lodash');

module.exports = {
	collectData,
};

function collectData () {
	var returnData = {
		"report" : {
			"components" : [],
		},
	};
	var listOfPachages = [];
	var nodeFolder = './node_modules';

	fsp
		.readdir(nodeFolder)
		.then(function (data) {
			return Promise.each(data, function (folder, key) {
				if (folder === '.bin') {
					return data.splice(key, 1);
				}
			})
		})
		.then(function (folders) {
			return Promise.each(folders, function (folder) {
				return fsp
					.readFile(nodeFolder + '/' + folder + '/package.json', 'utf8')
					.then(function (data) {
						var obj = {};
						obj = JSON.parse(data);
						return returnData.report.components.push({
							name    : obj.name,
							version : obj.version,
						});
					})
					.catch(function (_err) {
						return;
					})
				// listOfPachages.push(nodeFolder + '/' + folder + '/package.json');
			});
		})
		.then(function () {
			console.log('Collected Components: ', returnData.report.components.length);
			fsp.writeFileSync('./Components.json', JSON.stringify(returnData, null, 2), null);
			console.log('Done!');
			return;
		})
		.catch(function (error) {
			if (error.code === 'ENOENT' && error.path === './node_modules') {
				console.log('Error: There is no \'node_modules\' folder here');
			} else {
				console.log(error);
			}
		});
		// .catch(function (_error) {
		// 	if (_error) {
		//
		// 	}
		// })
}

// Allows us to call this function from outside of the library file.
// Without this, the function would be private to this file.
